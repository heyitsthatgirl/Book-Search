[{"/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/index.js":"1","/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/App.js":"2","/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/pages/SearchBooks.js":"3","/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/pages/SavedBooks.js":"4","/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/components/Navbar.js":"5","/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/components/Jumbotron.js":"6","/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/components/CardColumns.js":"7","/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/components/SignupForm.js":"8","/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/components/LoginForm.js":"9","/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/utils/API.js":"10","/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/utils/localStorage.js":"11","/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/utils/auth.js":"12","/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/utils/mutations.js":"13","/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/utils/queries.js":"14"},{"size":341,"mtime":1684100374617,"results":"15","hashOfConfig":"16"},{"size":1245,"mtime":1684118797293,"results":"17","hashOfConfig":"16"},{"size":5095,"mtime":1684106376069,"results":"18","hashOfConfig":"16"},{"size":3582,"mtime":1684118070058,"results":"19","hashOfConfig":"16"},{"size":2524,"mtime":1682550228397,"results":"20","hashOfConfig":"16"},{"size":235,"mtime":1682550228397,"results":"21","hashOfConfig":"16"},{"size":246,"mtime":1682550228397,"results":"22","hashOfConfig":"16"},{"size":3692,"mtime":1684117535653,"results":"23","hashOfConfig":"16"},{"size":2834,"mtime":1684117415382,"results":"24","hashOfConfig":"16"},{"size":1392,"mtime":1682550228397,"results":"25","hashOfConfig":"16"},{"size":793,"mtime":1682550228398,"results":"26","hashOfConfig":"16"},{"size":1235,"mtime":1682550228398,"results":"27","hashOfConfig":"16"},{"size":1078,"mtime":1684105368699,"results":"28","hashOfConfig":"16"},{"size":261,"mtime":1684115288843,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l450x3",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/index.js",[],"/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/App.js",[],"/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/pages/SearchBooks.js",[],"/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/pages/SavedBooks.js",["61"],"// import React, { useState, useEffect } from \"react\";\nimport { Container, Card, Button } from \"react-bootstrap\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport CardColumns from \"../components/CardColumns\";\n\n// import { getMe, deleteBook } from \"../utils/API\";\nimport Auth from \"../utils/auth\";\nimport { removeBookId } from \"../utils/localStorage\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_ME } from \"../utils/queries\";\nimport { REMOVE_BOOK } from \"../utils/mutations\";\n\nconst SavedBooks = () => {\n  const { loading, data } = useQuery(GET_ME);\n  const userData = data?.me || {};\n\n  const [removeBook] = useMutation(REMOVE_BOOK);\n\n  // const [userData, setUserData] = useState({});\n\n  // // use this to determine if `useEffect()` hook needs to run again\n  // const userDataLength = Object.keys(userData).length;\n\n  // useEffect(() => {\n  //   const getUserData = async () => {\n  //     try {\n  //       const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n  //       if (!token) {\n  //         return false;\n  //       }\n\n  //       const response = await getMe(token);\n\n  //       if (!response.ok) {\n  //         throw new Error('something went wrong!');\n  //       }\n\n  //       const user = await response.json();\n  //       setUserData(user);\n  //     } catch (err) {\n  //       console.error(err);\n  //     }\n  //   };\n\n  //   getUserData();\n  // }, [userDataLength]);\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { user } = await removeBook({ variables: { bookId: bookId } });\n\n      // if (!response.ok) {\n      //   throw new Error(\"something went wrong!\");\n      // }\n\n      userData = user;\n      // setUserData(updatedUser);\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${\n                userData.savedBooks.length === 1 ? \"book\" : \"books\"\n              }:`\n            : \"You have no saved books!\"}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Img\n                    src={book.image}\n                    alt={`The cover for ${book.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button\n                    className=\"btn-block btn-danger\"\n                    onClick={() => handleDeleteBook(book.bookId)}\n                  >\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n","/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/components/Navbar.js",[],"/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/components/Jumbotron.js",[],"/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/components/CardColumns.js",[],"/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/components/SignupForm.js",["62"],"import React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\n\n// import { createUser } from \"../utils/API\";\nimport Auth from \"../utils/auth\";\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await addUser({ variables: { ...userFormData } });\n\n      // if (!response.ok) {\n      //   throw new Error(\"something went wrong!\");\n      // }\n\n      // const { token, user } = await response.json();\n      // console.log(user);\n      Auth.login(data.addUser.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your username\"\n            name=\"username\"\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Username is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Your email address\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={\n            !(\n              userFormData.username &&\n              userFormData.email &&\n              userFormData.password\n            )\n          }\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/components/LoginForm.js",["63"],"// see SignupForm.js for comments\nimport React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\n// import { loginUser } from '../utils/API';\nimport Auth from \"../utils/auth\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [loginUser, { error }] = useMutation(LOGIN_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await loginUser({ variables: { ...userFormData } });\n\n      // const { token, user } = await response.json();\n      // console.log(user);\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your email\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/utils/API.js",[],"/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/utils/localStorage.js",[],"/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/utils/auth.js",[],"/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/utils/mutations.js",[],"/Users/hopemansfield/Desktop/school/challenges/Book-Search/Develop/client/src/utils/queries.js",[],{"ruleId":"64","severity":1,"message":"65","line":64,"column":7,"nodeType":"66","messageId":"67","endLine":64,"endColumn":15},{"ruleId":"68","severity":1,"message":"69","line":17,"column":21,"nodeType":"66","messageId":"70","endLine":17,"endColumn":26},{"ruleId":"68","severity":1,"message":"69","line":15,"column":23,"nodeType":"66","messageId":"70","endLine":15,"endColumn":28},"no-const-assign","'userData' is constant.","Identifier","const","no-unused-vars","'error' is assigned a value but never used.","unusedVar"]